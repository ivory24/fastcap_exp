第四章的核心思想  [绘制简单图形]
1.语法：
<1>vector：一维的一列数值：行向量或是列向量
向量的下标从1开始
初始化向量x=zeros（开始的下标，长度）
length：返回向量中的元素数目     长度：n=length(x)
<2>zeros，ones：返回零向量、元素全为1的向量
zeros（开始位数，长度）【类似于c++的初始化】
<3>linspace，logspace：返回在线性坐标轴或是对数坐标轴上等距分布的一组数值
linspace（左端点，右端点，数据点的数目）
logspace(左端点，右端点，数据点的数目【注：实际取值是x=每一个点的值，实际=10^每一个点】)
冒号：固定间距的一组数值：  1:2:9，以1开始，以9结束，间距为2
<4>for循环应用更加广泛：  固定的一组数值 9：-2:1     从一个向量中取值也是可以滴【5,2,4,7】
for  循环变量=循环变量值的向量
      代码片段
end
<5>plot、fill：绘制xy图形或是着色多边形
plot(x,y):单纯连接这些点
绘制不止一幅图像：plot(x1,y1,'-r',x2,y2,':w',x3,y3,'--b',……)
详细见课本62页：  
 '-'实线，'--'虚线，'-.'点虚线，':'点线
标记数据点：  '.'点，'o'圆圈，'*'星号，'+'加号，'x'叉号
线与标记设定颜色：'r'线为红色    ‘*b’星号标记为蓝色
fill()显示一块特定的颜色
fill(x,y,rgb,x1,y1,rgb1,……)
<6>eps，inf，NaN，realmax,realmin
<7>sprintf与fprintf的区别在于：前者只是返回字符串，而后者会输出到窗口
sprintf（'%17d',x）最少分配17个输出位置，数字不够17位，前面的都补上空格
sprintf（‘%-17d’，x）同上，后面的都补上空格
<8>title(sprintf())：字符串显示在窗口顶端
xlabel(字符串)；
ylabel(字符串)；
<9>pause：程序暂停，直到用户按下一个键【类似于c++中的system("pause")】
pause(t)   程序暂停t【可以为分数】秒
<10>x轴采取对数坐标:    semilogx(a,b)
y轴采取对数坐标:            semilogy(a,b)
两者都采取对数坐标:       loglog(a,b)
<11>text(x,y,字符串)：在绘图窗口显示字符串
<12>有关绘图窗口
close all   关闭所有打开的绘图窗口
figure      可以打开多个绘图窗口，只要你使用figure
axis equal off    等效于两条命令
axis  off    隐藏坐标轴，xlabel()命令无效
axis equal x、y轴标度一致
axis square   绘图窗口显示为正方形
hold on    后续的plot  fill都会在当前绘图窗口执行

hold off
shg     将当前图形移置顶端，遮盖所有的命令窗口和绘图窗口
2.复杂函数的一系列取值【直接向量加减乘除】
x=linspace(0,2*pi,100)
y1=(5*x)./7【向量运算直接运算】
3.向量的一些运算
<1>转置的表示：y=x'
<2>短小的向量：行向量元素使用方括号括起来，并用空格或逗号分开【列向量元素用分号隔开】
<3>连接向量：x=linspace(),y=linspace(),z=[x y]
附录A有很多关于绘图的设置
4.三次插值？？？？不是很理解
5.计算机对无限小数的舍入
IEEE浮点系统中的53,1073,1024  ？？？很不明白是什么意思？
eps:机器精度  可以直接在matlab里面输出它的值
inf：一个特殊的浮点数  1/0    就是一些不可能表示出来的值的代号
realmax    最大的正浮点数
realmin     最小的正浮点数
0/0    NaN 特殊的浮点数     包含变量值为NaN的所有表达式的值都是NaN
inf：

















